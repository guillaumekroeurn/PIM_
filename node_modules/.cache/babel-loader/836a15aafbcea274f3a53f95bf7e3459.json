{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  });\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"Wg9Iw8drnehZiF6NZH0snnDwS9I=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/guiguizer/Documents/GitHub/PIM_/src/components/Form/useForm.js"],"names":["useState","useEffect","useCallback","useForm","callback","validate","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,OAA/C;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACpC,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAE;AACjCQ,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,SAAS,EAAE;AAJsB,GAAF,CAAnC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAC/C,KAD+C,CAAhD;;AAIA,QAAMgB,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAb,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACY,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACR,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GALD;;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGsB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAvC,EAAqD;AACjDV,MAAAA,QAAQ;AACX;AACJ,GAJQ,CAAT;AAOA,SAAO;AAACY,IAAAA,YAAD;AAAeV,IAAAA,MAAf;AAAuBe,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AACH,CAnCD;;GAAMT,O;;AAqCN,eAAeA,OAAf","sourcesContent":["import {useState, useEffect, useCallback} from 'react'\n\nconst useForm = (callback, validate) => {\n    const[values, setValues] = useState ({\n        username: '',\n        email: '',\n        password: '',\n        password2: '',\n    })\n    const [errors, setErrors] = useState({})\n    const [isSubmitting, setIsSubmitting] = useState \n    (false)\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        setErrors(validate(values));\n        setIsSubmitting(true);\n    };\n\n    useEffect(() => {\n        if(Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n        }\n    },\n    )\n\n    return {handleChange, values, handleSubmit, errors };\n};\n\nexport default useForm; "]},"metadata":{},"sourceType":"module"}