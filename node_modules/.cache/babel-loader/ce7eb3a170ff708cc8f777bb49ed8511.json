{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n  };\n\n  return {\n    handleChange,\n    values,\n    handleSubmit\n  };\n};\n\n_s(useForm, \"l6yPqQ+BIujv+OITsRvpNl7CG1k=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/guiguizer/Documents/GitHub/PIM_/src/components/Form/useForm.js"],"names":["useState","useEffect","useForm","values","setValues","username","email","password","password2","errors","setErrors","handleChange","e","name","value","target","handleSubmit","preventDefault","validate"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAE;AACjCK,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,SAAS,EAAE;AAJsB,GAAF,CAAnC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAX,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACU,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAP,IAAAA,SAAS,CAACQ,QAAQ,CAACf,MAAD,CAAT,CAAT;AACH,GAJD;;AAMA,SAAO;AAACQ,IAAAA,YAAD;AAAeR,IAAAA,MAAf;AAAuBa,IAAAA;AAAvB,GAAP;AACH,CAzBD;;GAAMd,O;;AA2BN,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\n\nconst useForm = () => {\n    const[values, setValues] = useState ({\n        username: '',\n        email: '',\n        password: '',\n        password2: '',\n    })\n    const [errors, setErrors] = useState({})\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        setErrors(validate(values))\n    };\n\n    return {handleChange, values, handleSubmit };\n};\n\nexport default useForm; "]},"metadata":{},"sourceType":"module"}