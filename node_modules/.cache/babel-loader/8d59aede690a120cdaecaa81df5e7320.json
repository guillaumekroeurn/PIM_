{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\GitHub\\\\PIM_\\\\src\\\\components\\\\camera\\\\cam.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport Scananimation from './Scananimation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cam() {\n  _s();\n\n  const videoRef = useRef(null);\n  const photoRef = useRef(null);\n  const [hasPhoto, setHasPhoto] = useState(false);\n\n  const getVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        width: 1920,\n        height: 1080\n      }\n    }).then(stream => {\n      let video = videoRef.current;\n      video.srcObject = stream;\n      video.play();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const takePhoto = () => {\n    const width = 414;\n    const height = width / (16 / 9);\n    let video = videoRef.current;\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    setHasPhoto(true);\n  };\n\n  const closePhoto = () => {\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    ctx.clearRect(0, 0, photo.width, photo.height);\n    setHasPhoto(false);\n  };\n\n  useEffect(() => {\n    getVideo();\n  }, [videoRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Test\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cam\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PHOTO\",\n        onClick: takePhoto,\n        children: \"[ +_+ ]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Scananimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'result ' + (hasPhoto ? 'hasPhoto' : ''),\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: photoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePhoto,\n        children: \"CLOSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cam, \"37OcqNPM5+R8g4guBOMBu/IinBY=\");\n\n_c = Cam;\n;\nexport default Cam;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cam\");","map":{"version":3,"sources":["D:/Document/GitHub/PIM_/src/components/camera/cam.jsx"],"names":["React","useRef","useEffect","useState","Scananimation","Cam","videoRef","photoRef","hasPhoto","setHasPhoto","getVideo","navigator","mediaDevices","getUserMedia","video","width","height","then","stream","current","srcObject","play","catch","err","console","error","takePhoto","photo","ctx","getContext","drawImage","closePhoto","clearRect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMM,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACnBC,IAAAA,SAAS,CAACC,YAAV,CACKC,YADL,CACkB;AACVC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAC;AAAtB;AADG,KADlB,EAIKC,IAJL,CAIUC,MAAM,IAAG;AACX,UAAIJ,KAAK,GAAGR,QAAQ,CAACa,OAArB;AACAL,MAAAA,KAAK,CAACM,SAAN,GAAkBF,MAAlB;AACAJ,MAAAA,KAAK,CAACO,IAAN;AACH,KARL,EASKC,KATL,CASWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAXL;AAYH,GAbD;;AAeA,QAAMG,SAAS,GAAG,MAAM;AACpB,UAAMX,KAAK,GAAE,GAAb;AACA,UAAMC,MAAM,GAAGD,KAAK,IAAI,KAAG,CAAP,CAApB;AAEA,QAAID,KAAK,GAAGR,QAAQ,CAACa,OAArB;AACA,QAAIQ,KAAK,GAAGpB,QAAQ,CAACY,OAArB;AAEA,QAAIS,GAAG,GAAGD,KAAK,CAACE,UAAN,CAAiB,IAAjB,CAAV;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAchB,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2BC,KAA3B,EAAkCC,MAAlC;AACAP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAVD;;AAYA,QAAMsB,UAAU,GAAG,MAAM;AACrB,QAAIJ,KAAK,GAAGpB,QAAQ,CAACY,OAArB;AACA,QAAIS,GAAG,GAAGD,KAAK,CAACE,UAAN,CAAiB,IAAjB,CAAV;AAEAD,IAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBL,KAAK,CAACZ,KAA1B,EAAiCY,KAAK,CAACX,MAAvC;AAEAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAPD;;AASAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACJ,QAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAO,QAAA,GAAG,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAEoB,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAE,aAAYlB,QAAQ,GAAG,UAAH,GAClC,EADc,CAAhB;AAAA,8BAEI;AAAQ,QAAA,GAAG,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEwB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA7DQ1B,G;;KAAAA,G;AA6DR;AAED,eAAeA,GAAf","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\r\nimport Scananimation from './Scananimation';\r\n\r\n\r\n\r\nfunction Cam() {\r\n    const videoRef = useRef(null);\r\n    const photoRef = useRef(null);\r\n\r\n    const [hasPhoto, setHasPhoto] = useState(false);\r\n\r\n    const getVideo = () => {\r\n        navigator.mediaDevices\r\n            .getUserMedia({\r\n                video: { width: 1920, height:1080 }\r\n            })\r\n            .then(stream =>{\r\n                let video = videoRef.current;\r\n                video.srcObject = stream;\r\n                video.play();\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n    }\r\n\r\n    const takePhoto = () => {\r\n        const width =414;\r\n        const height = width / (16/9);\r\n\r\n        let video = videoRef.current;\r\n        let photo = photoRef.current;\r\n\r\n        let ctx = photo.getContext('2d');\r\n        ctx.drawImage(video, 0, 0, width, height);\r\n        setHasPhoto(true);\r\n    }\r\n\r\n    const closePhoto = () => {\r\n        let photo = photoRef.current;\r\n        let ctx = photo.getContext('2d');\r\n\r\n        ctx.clearRect(0, 0, photo.width, photo.height);\r\n\r\n        setHasPhoto(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVideo();\r\n    }, [videoRef])\r\n\r\n    return (\r\n        <div className='Test'>\r\n            <div className='Cam'>\r\n                <video ref={videoRef}></video>\r\n                <button className='PHOTO' onClick={takePhoto} >[ +_+ ]</button> \r\n            </div>\r\n            <Scananimation/>\r\n            <div className={'result '+ (hasPhoto ? 'hasPhoto' \r\n            : '')}>\r\n                <canvas ref={photoRef}></canvas>\r\n                <button onClick={closePhoto}>CLOSE</button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cam;"]},"metadata":{},"sourceType":"module"}